// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yolo_grpc.proto

/*
Package license_plate_recognition is a generated protocol buffer package.

It is generated from these files:
	yolo_grpc.proto

It has these top-level messages:
	CamInfo
	Detection
	Response
*/
package license_plate_recognition

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CamInfo struct {
	CamId     string     `protobuf:"bytes,1,opt,name=cam_id,json=camId" json:"cam_id,omitempty"`
	Timestamp int64      `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Image     []byte     `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Detection *Detection `protobuf:"bytes,4,opt,name=detection" json:"detection,omitempty"`
}

func (m *CamInfo) Reset()                    { *m = CamInfo{} }
func (m *CamInfo) String() string            { return proto.CompactTextString(m) }
func (*CamInfo) ProtoMessage()               {}
func (*CamInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CamInfo) GetCamId() string {
	if m != nil {
		return m.CamId
	}
	return ""
}

func (m *CamInfo) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *CamInfo) GetImage() []byte {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *CamInfo) GetDetection() *Detection {
	if m != nil {
		return m.Detection
	}
	return nil
}

type Detection struct {
	XLeft  int32 `protobuf:"varint,1,opt,name=x_left,json=xLeft" json:"x_left,omitempty"`
	YTop   int32 `protobuf:"varint,2,opt,name=y_top,json=yTop" json:"y_top,omitempty"`
	Height int32 `protobuf:"varint,3,opt,name=height" json:"height,omitempty"`
	Width  int32 `protobuf:"varint,4,opt,name=width" json:"width,omitempty"`
}

func (m *Detection) Reset()                    { *m = Detection{} }
func (m *Detection) String() string            { return proto.CompactTextString(m) }
func (*Detection) ProtoMessage()               {}
func (*Detection) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Detection) GetXLeft() int32 {
	if m != nil {
		return m.XLeft
	}
	return 0
}

func (m *Detection) GetYTop() int32 {
	if m != nil {
		return m.YTop
	}
	return 0
}

func (m *Detection) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Detection) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

type Response struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	Warning string `protobuf:"bytes,2,opt,name=warning" json:"warning,omitempty"`
	Error   string `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Response) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Response) GetWarning() string {
	if m != nil {
		return m.Warning
	}
	return ""
}

func (m *Response) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*CamInfo)(nil), "license_plate_recognition.CamInfo")
	proto.RegisterType((*Detection)(nil), "license_plate_recognition.Detection")
	proto.RegisterType((*Response)(nil), "license_plate_recognition.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for STYolo service

type STYoloClient interface {
	SendDetection(ctx context.Context, in *CamInfo, opts ...grpc.CallOption) (*Response, error)
}

type sTYoloClient struct {
	cc *grpc.ClientConn
}

func NewSTYoloClient(cc *grpc.ClientConn) STYoloClient {
	return &sTYoloClient{cc}
}

func (c *sTYoloClient) SendDetection(ctx context.Context, in *CamInfo, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/license_plate_recognition.STYolo/SendDetection", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for STYolo service

type STYoloServer interface {
	SendDetection(context.Context, *CamInfo) (*Response, error)
}

func RegisterSTYoloServer(s *grpc.Server, srv STYoloServer) {
	s.RegisterService(&_STYolo_serviceDesc, srv)
}

func _STYolo_SendDetection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CamInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(STYoloServer).SendDetection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/license_plate_recognition.STYolo/SendDetection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(STYoloServer).SendDetection(ctx, req.(*CamInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _STYolo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "license_plate_recognition.STYolo",
	HandlerType: (*STYoloServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendDetection",
			Handler:    _STYolo_SendDetection_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "yolo_grpc.proto",
}

func init() { proto.RegisterFile("yolo_grpc.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 311 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xbf, 0x4e, 0xc3, 0x30,
	0x10, 0x87, 0x09, 0xad, 0x53, 0x72, 0x80, 0x90, 0xcc, 0x1f, 0x05, 0xc4, 0x10, 0x05, 0x86, 0x4c,
	0x1d, 0xca, 0x1b, 0x00, 0x4b, 0x25, 0x26, 0xb7, 0x0b, 0x2c, 0x91, 0x49, 0xae, 0xa9, 0xa5, 0xd8,
	0x17, 0x39, 0x96, 0xda, 0xbe, 0x09, 0x8f, 0x8b, 0xe2, 0x34, 0x74, 0xa2, 0xe3, 0x77, 0xb9, 0xf8,
	0xf7, 0xdd, 0x1d, 0x5c, 0xed, 0xa8, 0xa6, 0xbc, 0xb2, 0x4d, 0x31, 0x6d, 0x2c, 0x39, 0xe2, 0xf7,
	0xb5, 0x2a, 0xd0, 0xb4, 0x98, 0x37, 0xb5, 0x74, 0x98, 0x5b, 0x2c, 0xa8, 0x32, 0xca, 0x29, 0x32,
	0xe9, 0x4f, 0x00, 0x93, 0x37, 0xa9, 0xe7, 0x66, 0x45, 0xfc, 0x16, 0xc2, 0x42, 0xea, 0x5c, 0x95,
	0x71, 0x90, 0x04, 0x59, 0x24, 0x58, 0x21, 0xf5, 0xbc, 0xe4, 0x8f, 0x10, 0x39, 0xa5, 0xb1, 0x75,
	0x52, 0x37, 0xf1, 0x69, 0x12, 0x64, 0x23, 0x71, 0x28, 0xf0, 0x1b, 0x60, 0x4a, 0xcb, 0x0a, 0xe3,
	0x51, 0x12, 0x64, 0x17, 0xa2, 0x07, 0xfe, 0x0a, 0x51, 0x89, 0x0e, 0x8b, 0x2e, 0x23, 0x1e, 0x27,
	0x41, 0x76, 0x3e, 0x7b, 0x9e, 0xfe, 0x6b, 0x31, 0x7d, 0x1f, 0x7a, 0xc5, 0xe1, 0xb7, 0x14, 0x21,
	0xfa, 0xab, 0x77, 0x6e, 0xdb, 0xbc, 0xc6, 0x95, 0xf3, 0x6e, 0x4c, 0xb0, 0xed, 0x07, 0xae, 0x1c,
	0xbf, 0x06, 0xb6, 0xcb, 0x1d, 0xf5, 0x5e, 0x4c, 0x8c, 0x77, 0x4b, 0x6a, 0xf8, 0x1d, 0x84, 0x6b,
	0x54, 0xd5, 0xda, 0x79, 0x27, 0x26, 0xf6, 0xd4, 0xa9, 0x6e, 0x54, 0xe9, 0xd6, 0x5e, 0x88, 0x89,
	0x1e, 0xd2, 0x25, 0x9c, 0x09, 0x6c, 0x1b, 0x32, 0x2d, 0xf2, 0x18, 0x26, 0x1a, 0xdb, 0xb6, 0x1b,
	0xa7, 0x5f, 0xc1, 0x80, 0xdd, 0x97, 0x8d, 0xb4, 0x46, 0x99, 0xca, 0x47, 0x45, 0x62, 0xc0, 0xee,
	0x55, 0xb4, 0x96, 0xac, 0x0f, 0x8b, 0x44, 0x0f, 0xb3, 0x12, 0xc2, 0xc5, 0xf2, 0x93, 0x6a, 0xe2,
	0x5f, 0x70, 0xb9, 0x40, 0x53, 0x1e, 0x46, 0x49, 0x8f, 0x2c, 0x62, 0x7f, 0x8a, 0x87, 0xa7, 0x23,
	0x3d, 0x83, 0x6d, 0x7a, 0xf2, 0x1d, 0xfa, 0xfb, 0xbe, 0xfc, 0x06, 0x00, 0x00, 0xff, 0xff, 0xab,
	0xd6, 0xd4, 0xe9, 0xf2, 0x01, 0x00, 0x00,
}
